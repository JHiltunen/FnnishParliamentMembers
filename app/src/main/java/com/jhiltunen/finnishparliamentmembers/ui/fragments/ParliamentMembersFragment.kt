package com.jhiltunen.finnishparliamentmembers.ui.fragments

import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.databinding.DataBindingUtil
import androidx.fragment.app.Fragment
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModelProvider
import androidx.lifecycle.observe
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs
import androidx.recyclerview.widget.LinearLayoutManager
import com.jhiltunen.finnishparliamentmembers.R
import com.jhiltunen.finnishparliamentmembers.databinding.FragmentMembersListBinding
import com.jhiltunen.finnishparliamentmembers.logic.viewmodelfactorys.ParliamentMembersViewModelFactory
import com.jhiltunen.finnishparliamentmembers.logic.viewmodels.ParliamentMembersViewModel
import com.jhiltunen.finnishparliamentmembers.ui.adapters.ParliamentMemberListAdapter

/**
 * Fragment that displays all parliament members that belong the specific party.
 * When user clicks one member his/her information will be shown on MemberDetailsFragment.
 */
class ParliamentMembersFragment : Fragment() {
    private lateinit var binding: FragmentMembersListBinding
    private lateinit var viewModel: ParliamentMembersViewModel
    private lateinit var adapter: ParliamentMemberListAdapter
    private lateinit var viewModelFactory : ParliamentMembersViewModelFactory

    /**
     * Called when the Fragment is ready to display content to the screen.
     *
     * This function uses DataBindingUtil to inflate R.layout.fragment_member_view_details.
     *
     * It is also responsible for passing the [ParliamentMembersViewModel] to the
     * [FragmentMembersListBinding] generated by DataBinding. This will allow DataBinding
     * to use the [LiveData] on our ViewModel.
     */
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Get arguments for this fragment
        val args: ParliamentMembersFragmentArgs by navArgs()
        val party = args.party

        // Get a reference to the binding object and inflate the fragment views.
        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_members_list, container, false)

        // Create an instance of the ViewModel Factory.
        viewModelFactory = ParliamentMembersViewModelFactory(party, requireNotNull(activity).application)
        // Get a reference to the ViewModel associated with this fragment.
        viewModel = ViewModelProvider(this, viewModelFactory).get(ParliamentMembersViewModel::class.java)

        // To use the View Model with data binding, you have to explicitly
        // give the binding object a reference to it.
        binding.viewModel = viewModel

        adapter = ParliamentMemberListAdapter(requireContext(), viewModel.parliamentMembers)

        binding.playerView.adapter = adapter
        binding.playerView.layoutManager = LinearLayoutManager(context)

        // Add an observer to parliament mebers list to detect changes in database
        viewModel.parliamentMembers.observe(viewLifecycleOwner) {
            // Submit list to recyclerview adapter
            adapter.submitList(it)
        }

        viewModel.navigateToMemberDetail.observe(viewLifecycleOwner, Observer { heteka ->
            heteka?.let {
                this.findNavController().navigate(
                    ParliamentMembersFragmentDirections
                        .actionParliamentMembersFragmentToMemberFragment3(heteka))
                Log.d("HETEKA", "$heteka")
                viewModel.onParliamentMemberNavigated()
            }
        })
        return binding.root
    }
}