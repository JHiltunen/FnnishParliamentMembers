package com.jhiltunen.finnishparliamentmembers.ui.fragments

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.databinding.DataBindingUtil
import androidx.fragment.app.Fragment
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.fragment.navArgs
import com.jhiltunen.finnishparliamentmembers.R
import com.jhiltunen.finnishparliamentmembers.databinding.FragmentMemberViewDetailsBinding
import com.jhiltunen.finnishparliamentmembers.logic.viewmodelfactorys.ParliamentMemberDetailsViewModelFactory
import com.jhiltunen.finnishparliamentmembers.logic.viewmodels.ParliamentMemberDetailsViewModel
import com.jhiltunen.finnishparliamentmembers.ui.adapters.bindImage

/**
 * Fragment that displays parliament members information.
 * User can like and dislike parliament member and it will be updated to database.
 */
class MemberDetailsFragment : Fragment() {
    private lateinit var binding: FragmentMemberViewDetailsBinding
    private lateinit var viewModel: ParliamentMemberDetailsViewModel
    private lateinit var viewModelFactory : ParliamentMemberDetailsViewModelFactory

    /**
     * Called when the Fragment is ready to display content to the screen.
     *
     * This function uses DataBindingUtil to inflate R.layout.fragment_member_view_details.
     *
     * It is also responsible for passing the [ParliamentMemberDetailsViewModel] to the
     * [FragmentMemberViewDetailsBinding] generated by DataBinding. This will allow DataBinding
     * to use the [LiveData] on our ViewModel.
     */
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Get arguments for this fragment
        val args: MemberDetailsFragmentArgs by navArgs()
        val hetekaId = args.hetekaId

        // Get a reference to the binding object and inflate the fragment views.
        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_member_view_details,container,false)

        // Create an instance of the ViewModel Factory.
        viewModelFactory = ParliamentMemberDetailsViewModelFactory(hetekaId, requireNotNull(activity).application)
        // Get a reference to the ViewModel associated with this fragment.
        viewModel = ViewModelProvider(this, viewModelFactory).get(ParliamentMemberDetailsViewModel::class.java)

        // To use the View Model with data binding, you have to explicitly
        // give the binding object a reference to it.
        binding.viewModel = viewModel

        // Add an Observer to the ParliamentMember object to detect database changes on member details
        viewModel.member.observe(viewLifecycleOwner, Observer {
            // Set member information to the view
            binding.firstname.text = it.firstname
            binding.lastname.text = it.lastname
            binding.partyName.text = it.party
            bindImage(binding.imageView, "https://avoindata.eduskunta.fi/${it.pictureUrl}")
        })

        // Add an Observer to the MemberLikes refrence to detect database changes on how many likes member has
        viewModel.memberLikes.observe(viewLifecycleOwner, Observer {
            // Set member likes to the view
           binding.likeDislikeRatio.text = it.toString()
        })

        // When thumbs up button is pressed call function to increase likes
        binding.likeButton.setOnClickListener {
            viewModel.increaseLikes()
        }

        // When thumbs down button is pressed call function to decrease likes
        binding.dislikeButton.setOnClickListener {
            viewModel.decreaseLikes()
        }

        return binding.root
    }
}